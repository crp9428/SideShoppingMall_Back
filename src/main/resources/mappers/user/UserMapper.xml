<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sideproject.shop.mappers.UserMapper">

    <select id="getUser" parameterType="hashmap" resultType="com.sideproject.shop.user.User">
        SELECT U.ID
               , U.IS_WITHDRAW
               , UID.LOGIN_ID
        <if test="P_PASSWORD != null and !P_PASSWORD.isEmpty()" >
               , U.IS_ADMIN
               , INFO.NAME
        </if>
        FROM   USER U
        INNER JOIN USER_ID UID
        ON     UID.LOGIN_ID = #{P_LOGIN_ID}
        AND    U.ID = UID.ID
        <if test="P_PASSWORD != null and !P_PASSWORD.isEmpty()" >
        AND    UID.PASSWORD = #{P_PASSWORD}
        INNER JOIN USER_INFO INFO
        ON     INFO.ID = U.ID
        </if>
        WHERE  1 = 1
    </select>

    <select id="getUserInfo" parameterType="hashmap" resultType="com.sideproject.shop.user.User">
        SELECT U.ID
               , UID.LOGIN_ID
               , U.IS_ADMIN
               , INFO.NAME
               , INFO.EMAIL
               , INFO.PHONE
               , INFO.BIRTH
               , INFO.GENDER
               , INFO.ADDRESS1
               , INFO.ADDRESS2
               , INFO.ADDRESS3
               , U.JOIN_DATE
        FROM   USER U
        INNER JOIN USER_ID UID
        ON     UID.ID = U.ID
        INNER JOIN USER_INFO INFO
        ON     INFO.ID = U.ID
        WHERE  1 = 1
        AND    U.ID = #{P_ID}
    </select>

    <insert id="insert_user" parameterType="hashmap">
        INSERT INTO USER (
            ID
        ) VALUES (
            #{P_ID}
        )
    </insert>

    <insert id="insert_userId" parameterType="hashmap">
        INSERT INTO USER_ID (
            ID
            , LOGIN_ID
            , PASSWORD
        ) VALUES (
            #{P_ID}
            , #{P_LOGIN_ID}
            , #{P_PASSWORD}
        )
    </insert>

    <insert id="insert_userInfo" parameterType="hashmap">
        INSERT INTO USER_INFO (
            ID
            , NAME
            , EMAIL
            , PHONE
            , BIRTH
            , GENDER
            , ADDRESS1
            , ADDRESS2
            , ADDRESS3
        ) VALUES (
            #{P_ID}
            , #{P_NAME, jdbcType=VARCHAR}
            , #{P_EMAIL, jdbcType=VARCHAR}
            , #{P_PHONE, jdbcType=VARCHAR}
            , #{P_BIRTH, jdbcType=VARCHAR}
            , #{P_GENDER, jdbcType=VARCHAR}
            , #{P_ADDRESS1, jdbcType=VARCHAR}
            , #{P_ADDRESS2, jdbcType=VARCHAR}
            , #{P_ADDRESS3, jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateUserInfo" parameterType="hashmap">
        UPDATE USER_INFO
        SET    EMAIL = IFNULL(#{P_EMAIL}, EMAIL)
               , PHONE = IFNULL(#{P_PHONE}, PHONE)
               , ADDRESS1 = IFNULL(#{P_ADDRESS1}, ADDRESS1)
               , ADDRESS2 = IFNULL(#{P_ADDRESS2}, ADDRESS2)
               , ADDRESS3 = IFNULL(#{P_ADDRESS3}, ADDRESS3)
        WHERE  ID = #{P_ID}
    </update>

    <update id="withdraw" parameterType="hashmap">
        UPDATE USER
        SET    IS_WITHDRAW = 1
        WHERE  ID = #{P_ID}
    </update>

    <select id="findLoginInfo" parameterType="hashmap" resultType="String">
        SELECT CASE
               <if test="P_FIND == 1" >
               WHEN U.IS_WITHDRAW = '1' THEN '1'
               WHEN UI.LOGIN_ID IS NOT NULL THEN UI.LOGIN_ID
               WHEN INFO.ID IS NOT NULL THEN '2'
               </if>
               <if test="P_FIND == 2" >
               WHEN U.IS_WITHDRAW = '1' THEN '1'
               WHEN UI.ID IS NOT NULL THEN UI.ID
               </if>
               END
        FROM   USER_INFO INFO
        LEFT JOIN USER_ID UI
        ON     UI.ID = INFO.ID
        LEFT JOIN USER U
        ON     U.ID = INFO.ID
        WHERE  1 = 1
        <if test="P_FIND == 1" >
        AND    INFO.NAME = #{P_NAME}
        </if>
        <if test ="P_FINDTYPE == 1">
        AND    INFO.EMAIL = #{P_FINDDATA}
        </if>
        <if test ="P_FINDTYPE == 2">
        AND    INFO.PHONE = #{P_FINDDATA}
        </if>
        <if test="P_FIND == 2" >
        AND    UI.LOGIN_ID = #{P_LOGIN_ID}
        </if>
    </select>

    <select id="checkPassword" parameterType="hashmap" resultType="int">
        SELECT COUNT(*)
        FROM   USER_ID
        WHERE  ID = #{P_ID}
        AND    PASSWORD = #{P_PASSWORD}
    </select>
    
    <update id="updatePassword" parameterType="hashmap">
        UPDATE USER_ID
        SET    PASSWORD = #{P_PASSWORD}
        WHERE  ID = #{P_ID}
    </update>
    
</mapper>