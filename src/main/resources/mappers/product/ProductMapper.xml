<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sideproject.shop.mappers.ProductMapper">

    <select id="productCount" parameterType="hashmap" resultType="int">
        SELECT COUNT(ID)
        FROM   PRODUCT
        WHERE  1 = 1
        <if test="P_CATEGORY != null and !P_CATEGORY.isEmpty()" >
        AND    CATEGORY_CODE = #{P_CATEGORY}
        </if>
        AND    IS_DELETE = 0
        <if test="P_SEARCH_TEXT != null and !P_SEARCH_TEXT.isEmpty()" >
        AND    LOWER(NAME) LIKE CONCAT('%', LOWER(#{P_SEARCH_TEXT}), '%')
        </if>
    </select>

    <select id="productList" parameterType="hashmap" resultType="com.sideproject.shop.product.Product">
        SELECT PRODUCT.ID
            , NAME
            , PRICE
            , CATEGORY_CODE
            , CATEGORIES.CODE_NAME AS CATEGORY_NAME
            , HIT
            , STOCK
            , IMAGES.IMAGE AS THUMBNAIL
            , INSERT_DATE
        FROM   PRODUCT
        LEFT JOIN COMMON_CODE CATEGORIES
        ON     CATEGORIES.CODE_GROUP1 = 'CATEGORY'
        AND    CATEGORIES.CODE_GROUP2 = 'CATEGORY'
        AND    CATEGORIES.CODE = CATEGORY_CODE
        LEFT JOIN PRODUCT_IMAGE IMAGES
        ON     IMAGES.ID = PRODUCT.ID
        AND    IMAGES.SEQ = 1
        WHERE  1 = 1
        <if test="P_CATEGORY != null and !P_CATEGORY.isEmpty()" >
        AND    CATEGORY_CODE = #{P_CATEGORY}
        </if>
        AND    IS_DELETE = 0
        <if test="P_SEARCH_TEXT != null and !P_SEARCH_TEXT.isEmpty()" >
        AND    LOWER(NAME) LIKE CONCAT('%', LOWER(#{P_SEARCH_TEXT}), '%')
        </if>
        ORDER BY
        <choose>
            <when test="P_ORDER == 1" >HIT DESC</when>
            <when test="P_ORDER == 2" >PRICE ASC</when>
            <when test="P_ORDER == 3" >PRICE DESC</when>
            <when test="P_ORDER == 4" >INSERT_DATE DESC</when>
            <otherwise>PRODUCT.ID ASC</otherwise>
        </choose>
        LIMIT #{P_START}, #{P_VIEW_NUM}
    </select>

    <update id="updateProductHit" parameterType="hashmap" >
        UPDATE PRODUCT
        SET    HIT = HIT + 1
        WHERE  ID = #{P_PRODUCT_ID}
    </update>

    <select id="getProduct" parameterType="hashmap" resultType="com.sideproject.shop.product.Product">
        SELECT ID
               , NAME
               , PRICE
               , CATEGORY_CODE
               , CATEGORIES.CODE_NAME AS CATEGORY_NAME
               , SIZEINFO
               , CONTENT
               , HIT
               , STOCK
               , IS_DELETE
               , INSERT_DATE
        FROM   PRODUCT
        LEFT JOIN COMMON_CODE CATEGORIES
        ON     CATEGORIES.CODE_GROUP1 = 'CATEGORY'
        AND    CATEGORIES.CODE_GROUP2 = 'CATEGORY'
        AND    CATEGORIES.CODE = CATEGORY_CODE
        WHERE  ID = #{P_PRODUCT_ID}
    </select>

    <select id="productImageList" parameterType="hashmap" resultType="com.sideproject.shop.product.ProductImage">
        SELECT ID
               , SEQ
               , IMAGE
        FROM   PRODUCT_IMAGE
        WHERE  ID = #{P_PRODUCT_ID}
        ORDER BY SEQ ASC
    </select>

    <select id="productSizeList" parameterType="hashmap" resultType="String">
        <if test="P_GET_NAME == true">
        SELECT COMMON.CODE_NAME
        </if>
        <if test="P_GET_NAME == false">
        SELECT SIZES.SIZE_CODE
        </if>
        FROM   PRODUCT_SIZE SIZES
        INNER JOIN COMMON_CODE COMMON
        ON     COMMON.CODE_GROUP1 = 'SIZE'
        AND    COMMON.CODE_GROUP2 = SIZES.CATEGORY_CODE
        AND    COMMON.CODE = SIZES.SIZE_CODE
        WHERE  SIZES.ID = #{P_PRODUCT_ID}
    </select>

    <insert id="insertProduct" parameterType="hashmap" >
        <selectKey resultType="int" keyProperty="ID" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>

        INSERT INTO PRODUCT (
            NAME
            , PRICE
            , CATEGORY_CODE
            , SIZEINFO
            , CONTENT
            , STOCK
        ) VALUES (
            #{P_NAME}
            , #{P_PRICE}
            , #{P_CATEGORY_CODE}
            , #{P_SIZEINFO, jdbcType=VARCHAR}
            , #{P_CONTENT, jdbcType=VARCHAR}
            , #{P_STOCK}
        )
    </insert>

    <insert id="insertProductImage" parameterType="hashmap" >
        INSERT INTO PRODUCT_IMAGE (
            ID
            , SEQ
            , IMAGE
        )
        SELECT #{P_ID} AS ID
               , IFNULL(MAX(SEQ), 0) + 1 AS SEQ
               , #{P_IMAGE} AS IMAGE
        FROM   PRODUCT_IMAGE
        WHERE  ID = #{P_ID}
    </insert>

    <insert id="insertProductSize" parameterType="hashmap" >
        INSERT INTO PRODUCT_SIZE (
            ID
            , CATEGORY_CODE
            , SIZE_CODE
        ) VALUES (
            #{P_ID}
            , #{P_CATEGORY_CODE}
            , #{P_SIZE}
        )
    </insert>

    <update id="updateProduct" parameterType="hashmap" >
        UPDATE PRODUCT
        SET    NAME = IFNULL(#{P_NAME}, NAME)
               , PRICE = IFNULL(#{P_PRICE}, PRICE)
               , SIZEINFO = IFNULL(#{P_SIZEINFO, jdbcType=VARCHAR}, SIZEINFO)
               , CONTENT = IFNULL(#{P_CONTENT, jdbcType=VARCHAR}, CONTENT)
               , STOCK = IFNULL(#{P_STOCK}, STOCK)
        WHERE  ID = #{P_ID}
    </update>

    <delete id="deleteProductImage" parameterType="hashmap" >
        DELETE
        FROM   PRODUCT_IMAGE
        WHERE  ID = #{P_ID}
        <if test="P_SEQ != null and !P_SEQ.isEmpty()" >
        AND    SEQ = #{P_SEQ}
        </if>
    </delete>

    <delete id="deleteProductSize" parameterType="hashmap" >
        DELETE
        FROM   PRODUCT_SIZE
        WHERE  ID = #{P_ID}
        <if test="P_CATEGORY_CODE != null and !P_CATEGORY_CODE.isEmpty()" >
        AND    CATEGORY_CODE = #{P_CATEGORY_CODE}
        </if>
        <if test="P_SIZE != null and !P_SIZE.isEmpty()" >
        AND    SIZE_CODE = #{P_SIZE}
        </if>
    </delete>

    <update id="deleteProduct" parameterType="hashmap" >
        UPDATE PRODUCT
        SET    IS_DELETE = 1
        WHERE  ID = #{P_ID}
    </update>
</mapper>